type User {
  id: ID!
  email: String!
  name: String
  password: String!
  nickname: String!
  name: String!
  gender: String
  job: String
  githubUrl: String
  blogUrl: String
}

type Token {
  accessToken: String!
  refreshToken: String!
}

input UserData {
  id: ID
  email: String
  password: String
  nickname: String
  name: String
  gender: String
  job: String
  githubUrl: String
  blogUrl: String
}

input UserCheck {
  email: String!
  password: String!
  passwordCheck: String!
}

input UserLoginInfo {
  email: String!
  password: String!
}

input UserFind {
  email: String
  nickname: String
}

type Query {
  me(id: ID!): User!
  allUser: [User!]!
  searchUserByNickname(nickname: String!): [User]
  searchUserByEmail(email: String!): User
  userCheck(userInfo: UserCheck!): Boolean!
  userFind(user: UserFind!): User!
}

type Mutation {
  signup(user: UserData!): User!
  updateUser(user: UserData!): Boolean!
  login(userInfo: UserLoginInfo): Token!
}
