type User {
  id: ID
  email: String
  nickname: String
  gender: String
  job: String
  githubUrl: String
  blogUrl: String
}

type Til {
  id: ID!
  title: String
  til_comment: String
  createdAt: String
  udpatedAt: String
  UserId: Int!
}

type TilComment {
  id: ID!
  til_comment: String!
  CommentedUserId: Int!
  createdAt: String!
  user: User!
  til: Til!
}

input RegisterTil {
  title: String
  til_content: String!
  UserId: Int!
}

input UpdateTil {
  til_content: String
  title: String
  UserId: Int!
  tilId: ID!
}

input DeleteTil {
  UserId: Int!
  tilId: ID!
}

input LimitedTils {
  UserId: Int!
  count: Int!
}

input RegisterTilComment {
  TilId: ID!
  UserId: Int!
  til_comment: String!
}

input UpdateTilComment {
  id: ID!
  CommentedUserId: Int!
  til_comment: String!
}

input DeleteTilComment {
  id: ID!
  CommentedUserId: Int!
}

type Query {
  getTilsByUserId(UserId: Int!): [Til]
  getTilWithComment(tilId: ID!): [TilComment]
  getLimitedTils(til: LimitedTils!): [Til]
}

type Mutation {
  registerTil(til: RegisterTil!): Boolean!
  updateTil(til: UpdateTil!): Boolean!
  deleteTil(til: DeleteTil!): Boolean!
  registerTilComment(til: RegisterTilComment!): Boolean!
  updateTilComment(til: UpdateTilComment!): Boolean!
  deleteTilComment(til: DeleteTilComment!): Boolean!
}
